version: '3.8'

services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/backend/static
      - media_volume:/home/app/backend/media
      - ./:/home/app/backend
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db


  db:
    image: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db


  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - static_volume:/home/app/backend/staticfiles
  #     - media_volume:/home/app/backend/mediafiles
  #   ports:
  #     - 1337:80
  #   depends_on:
  #     - web

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - ./.env.dev
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - 5050:80
    depends_on:
      - "db"
    restart: unless-stopped
  
  bot:
    build: ./tg_bot
    command: python tg_vulpers.py
    volumes:
      - ./tg_bot/:/usr/src/app/
    env_file:
      - ./tg_bot/prod.env
    depends_on:
      - "db"


  # vue:
  #   image: node:12
  #   volumes:
  #     - ./:/code
  #   working_dir: /code
  #   env_file:
  #     - ./.env.dev
  #   command: bash -c "npm i && npm run build"
volumes:
  pg_data:
  static_volume:
  media_volume:
  pgadmin:
